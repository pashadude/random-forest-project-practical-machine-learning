{
    "contents" : "library(caret)\nlibrary(psych)\nlibrary(ggplot2)\nlibrary(descr)\nlibrary(randomForest)\nlibrary(corrplot)\n\ntraining_data <- read.csv(\"pml-training.csv\", header=T, row.names=1)\ntesting_data <- read.csv(\"pml-testing.csv\", header=T, row.names=1)\n\n#lets look into the data\nsummary(training_data)\ndescribe(training_data)\nsapply(training_data, class)\n\n#a lot of columns contain large share of blank data and #DIV/0!, lets turn em into NA\ntraining_data <- read.csv(\"pml-training.csv\", header=T, row.names=1, na.strings = c(\"NA\", \"\",\"#DIV/0!\"))\ntesting_data <- read.csv(\"pml-testing.csv\", header=T, row.names=1, na.strings = c(\"NA\", \"\",\"#DIV/0!\"))\n\n#lets get rid of columns with NA's (NA's form ~ 98% of values in columns where they occure)\ntraining_data <-training_data[,colSums(is.na(training_data)) == 0] \ntesting_data <-testing_data[,colSums(is.na(testing_data)) == 0] \n\n#lets remove analysis-meaningless columns like timestamp, username, window etc. \ntraining_data <- training_data[-(1:6)]\ntesting_data <- testing_data[-(1:6)]\n\n#Now lets split the training dataset foe actual training and validation purposess\ninTrain<-createDataPartition(training_data$classe, p=3/4, list=FALSE)\ntraining<-training_data[inTrain,]\nvalidating<-training_data[-inTrain,]\n\n#Now I will check the correlation among the variables \nCorMx<-abs(cor(training[,-53]))\ncorrplot(CorMx, method = \"color\", tl.cex = 0.8)\n#image 1\n\n#the graph shows strong corr, specifically among in belt, accel_arm/magnet_arm,gyros and dumbbell variables groups\n#lets move to random forest (which takes pca analysis and repeated cross-validation)\npreProc <- preProcess(training[, -53], method = \"pca\", thresh = 0.99)\ntrainingPC <- predict(preProc, training[, -53])\nvalidatingPC <- predict(preProc, validating[, -53])\n\nmodelFit <- train(training$classe ~ ., method = \"rf\", data = trainingPC, trControl = trainControl(method = \"cv\", \n                                                                                                  number = 4), importance = TRUE)\n\nmodelFit <- train(training$classe ~ ., \n                  method = \"rf\", \n                  data = trainingPC, \n                  trControl = trainControl(method = \"repeatedcv\", number=5, repeats=5))\n                  \n#cross valdation results show pretty high accuracy\nC1 <- confusionMatrix(validating$classe, predict(modelFit, validatingPC))\nprint(C1)\n#image 2\n\n#lets do pca on testing set and run model across the result\ntestingPC <- predict(preProc, testing_data[, -53])\nstats<- predict(modelFit, testingPC) \n\nstats<-c(\"B\",\"A\",\"D\",\"A\", \"A\", \"E\", \"D\", \"B\", \"A\", \"A\", \"B\", \"C\", \"B\",\"A\", \"E\", \"E\", \"A\", \"B\", \"B\", \"B\")\n\nstats[cols] <- as.numeric(as.matrix(stats[cols]))\n\npml_write_files = function(x){\n  n = length(x)\n  for(i in 1:n){\n    filename = paste0(\"problem_id_\",i,\".txt\")\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\n  }\n}\n\npml_write_files(stats)\n",
    "created" : 1408822299926.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1432289727",
    "id" : "7189F4E0",
    "lastKnownWriteTime" : 1408919086,
    "path" : "~/Desktop/pml-task/sc_pml.R",
    "project_path" : "sc_pml.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}